# Macros:
#% macro, P, Device Prefix
#% macro, R, Device Suffix
#% macro, PORT, Asyn Port name
#% macro, TIMEOUT, Timeout
#% macro, ADDR, Asyn Port address
#% macro, INVERT, If 1 then multiply output signals by -1
#% macro, CARRIER_SITE, The location of the card in the carrier

# This associates the template with an edm screen
# % gui, $(PORT), edmtab, dtacq_adc.edl, P=$(P),R=$(R)

###################################################################
#  These records control whether to invert input signal (+ve/-ve)   #
###################################################################
# % autosave 2 
record(mbbo, "$(P)$(R)INVERT")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))INVERT")
   field(VAL, "$(INVERT=0)")
   field(ZRST, "No")
   field(ZRVL, "0")
   field(ONST, "Yes")
   field(ONVL, "1")
   field(PINI, "YES")   
}

record(mbbi, "$(P)$(R)INVERT_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))INVERT")
   field(SCAN, "I/O Intr")
   field(ZRST, "No")
   field(ZRVL, "0")
   field(ONST, "Yes")
   field(ONVL, "1")
}

record(ao, "$(P)$(R)CARRIER_SITE")
{
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))CARRIER_SITE")
    field(VAL, "$(CARRIER_SITE=1)")
    field(PINI, "YES")
}

record(ai, "$(P)$(R)CARRIER_SITE_RBV")
{
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))CARRIER_SITE")
    field(SCAN, "I/O Intr")
}